{"ast":null,"code":"var _jsxFileName = \"/Users/daracasey/WISP/Quizlet/bootcamp/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// import { findRenderedDOMComponentWithClass } from 'react-dom/test-utils';\nimport CardEditor from './CardEditor';\nimport CardViewer from './CardViewer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = props => {\n  _s();\n  // const editor = true;\n  const [editor, setEditor] = useState(true);\n  const [cards, setCards] = useState([{\n    front: 'door',\n    back: 'something you can open'\n  }, {\n    front: 'dali cto',\n    back: 'pape'\n  }]);\n  const addCard = card => {\n    const newCards = cards.slice().concat(card);\n    setCards(newCards);\n  };\n  const deleteCard = index => {\n    const newCards = cards.slice();\n    newCards.splice(index, 1);\n    setCards(newCards);\n  };\n  const switchMode = () => {\n    setEditor(!editor);\n  };\n  if (editor) {\n    return /*#__PURE__*/_jsxDEV(CardViewer, {\n      cards: cards,\n      switchMode: switchMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(CardEditor, {\n      cards: cards,\n      addCard: addCard,\n      deleteCard: deleteCard,\n      switchMode: switchMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n// class App extends React.Component {\n\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       cards: [\n//         { front: 'front1', back: 'back1'},\n//         { front: 'front2', back: 'back2'},\n//       ],\n\n//       editor: true,\n//     };\n\n//   }\n\n//   addCard = card => {\n//     const cards = this.state.cards.slice().concat(card);\n//     this.setState({cards});\n\n//   }\n\n//   deleteCard = index => {\n//     const cards = this.state.cards.slice();\n//     cards.splice(index, 1);\n//     this.setState({cards});  \n//   }\n\n//   switchMode = () => this.setState({editor: !this.state.editor});\n//   render(){\n//     if(this.state.editor) {\n//       return <CardEditor addCard={this.addCard} cards = {this.state.cards} deleteCard={this.deleteCard} switchMode={this.switchMode}/>;\n//     }\n//     else{\n//       return <CardViewer switchMode={this.switchMode}/>\n//     }\n\n//   }\n// }\n_s(App, \"j0novGwywQCj9YhXD8eW32T2758=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CardEditor","CardViewer","App","props","editor","setEditor","cards","setCards","front","back","addCard","card","newCards","slice","concat","deleteCard","index","splice","switchMode"],"sources":["/Users/daracasey/WISP/Quizlet/bootcamp/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\n// import { findRenderedDOMComponentWithClass } from 'react-dom/test-utils';\nimport CardEditor from './CardEditor';\nimport CardViewer from './CardViewer';\n\nconst App = (props) => {\n\n  // const editor = true;\n  const [editor, setEditor] = useState(true);\n  const [cards, setCards] = useState([\n      { front: 'door', back: 'something you can open'},\n      { front: 'dali cto', back: 'pape'},\n  ])\n\n  const addCard = (card) => {\n    const newCards = cards.slice().concat(card)\n    setCards(newCards)\n  }\n\n  const deleteCard = (index) => {\n    const newCards = cards.slice();\n    newCards.splice(index, 1);\n    setCards(newCards);\n  }\n\n  const switchMode = () => {\n    setEditor(!editor);\n  }\n\n  if(editor){\n    return(<CardViewer cards={cards} switchMode={switchMode}/>);\n  }\n  else{\n    return(<CardEditor cards={cards} addCard={addCard} deleteCard={deleteCard} switchMode={switchMode}/>);\n  }\n\n    \n}\n\n// class App extends React.Component {\n\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       cards: [\n//         { front: 'front1', back: 'back1'},\n//         { front: 'front2', back: 'back2'},\n//       ],\n\n//       editor: true,\n//     };\n\n//   }\n\n//   addCard = card => {\n//     const cards = this.state.cards.slice().concat(card);\n//     this.setState({cards});\n\n//   }\n\n//   deleteCard = index => {\n//     const cards = this.state.cards.slice();\n//     cards.splice(index, 1);\n//     this.setState({cards});  \n//   }\n\n//   switchMode = () => this.setState({editor: !this.state.editor});\n//   render(){\n//     if(this.state.editor) {\n//       return <CardEditor addCard={this.addCard} cards = {this.state.cards} deleteCard={this.deleteCard} switchMode={this.switchMode}/>;\n//     }\n//     else{\n//       return <CardViewer switchMode={this.switchMode}/>\n//     }\n    \n    \n//   }\n// }\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC;AACA,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,UAAU,MAAM,cAAc;AAAC;AAEtC,MAAMC,GAAG,GAAIC,KAAK,IAAK;EAAA;EAErB;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAC/B;IAAES,KAAK,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAwB,CAAC,EAChD;IAAED,KAAK,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAM,CAAC,CACrC,CAAC;EAEF,MAAMC,OAAO,GAAIC,IAAI,IAAK;IACxB,MAAMC,QAAQ,GAAGN,KAAK,CAACO,KAAK,EAAE,CAACC,MAAM,CAACH,IAAI,CAAC;IAC3CJ,QAAQ,CAACK,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMG,UAAU,GAAIC,KAAK,IAAK;IAC5B,MAAMJ,QAAQ,GAAGN,KAAK,CAACO,KAAK,EAAE;IAC9BD,QAAQ,CAACK,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IACzBT,QAAQ,CAACK,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMM,UAAU,GAAG,MAAM;IACvBb,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,IAAGA,MAAM,EAAC;IACR,oBAAO,QAAC,UAAU;MAAC,KAAK,EAAEE,KAAM;MAAC,UAAU,EAAEY;IAAW;MAAA;MAAA;MAAA;IAAA,QAAE;EAC5D,CAAC,MACG;IACF,oBAAO,QAAC,UAAU;MAAC,KAAK,EAAEZ,KAAM;MAAC,OAAO,EAAEI,OAAQ;MAAC,UAAU,EAAEK,UAAW;MAAC,UAAU,EAAEG;IAAW;MAAA;MAAA;MAAA;IAAA,QAAE;EACtG;AAGF,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AAAA,GAxEMhB,GAAG;AAAA,KAAHA,GAAG;AA0ET,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}